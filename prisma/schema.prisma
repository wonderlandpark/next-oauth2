// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Scope {
  identify
  email
}

enum GrantType {
  authorization_code
  refresh_token
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  email    String @unique
  password String
  
  authorizationCodes AuthorizationCode[]
  tokens   Token[]
  refreshTokens RefreshToken[]

}

model Client {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  secret String // @encrypted
  redirectUris String[]
  grants      GrantType[] @default([authorization_code, refresh_token])
  createdAt DateTime @default(now())

  authorizationCodes AuthorizationCode[]
  tokens   Token[]
  refreshTokens RefreshToken[]
}

model Token {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  accessToken  String
  scope        Scope[] @default([identify])

  createdAt DateTime @default(now())
  expiresAt DateTime
  
  user         User   @relation(fields: [userId], references: [id])
  userId       String @db.ObjectId

  client   Client @relation(fields: [clientId], references: [id])
  clientId String @db.ObjectId
}


model RefreshToken {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  refreshToken  String

  scope        Scope[] @default([identify])

  createdAt DateTime @default(now())
  expiresAt DateTime
  
  user         User   @relation(fields: [userId], references: [id])
  userId       String @db.ObjectId

  client   Client @relation(fields: [clientId], references: [id])
  clientId String @db.ObjectId
}

model AuthorizationCode {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  code      String   @unique
  redirectUri String
  scope     Scope[] @default([identify])
  state     String?

  createdAt DateTime @default(now())
  expiresAt DateTime
  
  user         User   @relation(fields: [userId], references: [id])
  userId       String @db.ObjectId

  client   Client @relation(fields: [clientId], references: [id])
  clientId String @db.ObjectId
}